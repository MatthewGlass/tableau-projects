<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0912.2314                               -->
<workbook original-version='18.1' source-build='2025.2.3 (20252.25.0912.2314)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='CovidDataProject_17610014601040' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Covid Data 3)' inline='true' name='federated.0w17mqw1c4xpqk1frsg3m0ngkhof' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Data 3' name='excel-direct.0szjpik0t33xn61eoihkm1s39l4n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/matth/Documents/Matt Applying for Job 2024/Tableau Projects/Covid Project/Covid Data 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0szjpik0t33xn61eoihkm1s39l4n' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_89E6251B787B486582CAB0F2B8A10586]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/matth/AppData/Local/Temp/TableauTemp/#TableauTemp_0xb2d1h0d7c08j150tgl40ixhi7v.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2025 05:50:51 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_89E6251B787B486582CAB0F2B8A10586]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_89E6251B787B486582CAB0F2B8A10586'>
            <properties context=''>
              <relation connection='excel-direct.0szjpik0t33xn61eoihkm1s39l4n' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Covid Data 4)' inline='true' name='federated.19vy04h0kr0p9911m5eub1acknfw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Data 4' name='excel-direct.04yxmx71xpy63r1aiucxx00u57i9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/matth/Documents/Matt Applying for Job 2024/Tableau Projects/Covid Project/Covid Data 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.04yxmx71xpy63r1aiucxx00u57i9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_68DE8A706BB94C3B9F44307B8B99D83C]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/matth/AppData/Local/Temp/TableauTemp/#TableauTemp_0puxq3n0uyf19q1g4lqyh0tvws7s.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/20/2025 10:48:00 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>307</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1206</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18618</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28901</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_68DE8A706BB94C3B9F44307B8B99D83C'>
            <properties context=''>
              <relation connection='excel-direct.04yxmx71xpy63r1aiucxx00u57i9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Covid Data 2)' inline='true' name='federated.1ap96g30y2ecut1h0n1md09jv5xb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Data 2' name='excel-direct.0dsdaq200acnro1162q850710tfk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/matth/Documents/Matt Applying for Job 2024/Tableau Projects/Covid Project/Covid Data 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0dsdaq200acnro1162q850710tfk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_83D5ACD21A6848348424AA71261DE734]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_83D5ACD21A6848348424AA71261DE734]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_83D5ACD21A6848348424AA71261DE734]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;North America&quot;' value='NA' />
          <alias key='&quot;South America&quot;' value='SA' />
        </aliases>
      </column>
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/matth/AppData/Local/Temp/TableauTemp/#TableauTemp_17qp4em024er5d1149mx107yyuhi.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2025 03:37:33 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_83D5ACD21A6848348424AA71261DE734'>
            <properties context=''>
              <relation connection='excel-direct.0dsdaq200acnro1162q850710tfk' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Covid Data 1)' inline='true' name='federated.1w76oka1y78fp812r968a0m7faul' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Covid Data 1' name='excel-direct.1aia5t50uidp7f131h0s51tpravb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/matth/Documents/Matt Applying for Job 2024/Tableau Projects/Covid Project/Covid Data 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1aia5t50uidp7f131h0s51tpravb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/matth/AppData/Local/Temp/TableauTemp/#TableauTemp_0mgy4d803cdrpv12j5bjb17505ye.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/19/2025 03:36:58 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_46C38AC63A44435C89E23DF211FAD9C9]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_46C38AC63A44435C89E23DF211FAD9C9'>
            <properties context=''>
              <relation connection='excel-direct.1aia5t50uidp7f131h0s51tpravb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000'>Global COVID-19 Totals Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid Data 1)' name='federated.1w76oka1y78fp812r968a0m7faul' />
          </datasources>
          <datasource-dependencies datasource='federated.1w76oka1y78fp812r968a0m7faul'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1w76oka1y78fp812r968a0m7faul].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]' value='388' />
            <format attr='height' value='23' />
            <format attr='color' value='#000000' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.1w76oka1y78fp812r968a0m7faul].[sum:DeathPercentage:qk]' value='n#,##0.00&quot;%&quot;;-#,##0.00&quot;%&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]' value='31' />
            <format attr='vertical-align' data-class='total' value='center' />
            <format attr='background-color' scope='cols' value='#5ea654' />
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.1w76oka1y78fp812r968a0m7faul].[sum:DeathPercentage:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1w76oka1y78fp812r968a0m7faul].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.1094474792480469' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{813A2AC4-0024-4002-90F0-2C0F3707A7A2}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid Data 2)' name='federated.1ap96g30y2ecut1h0n1md09jv5xb' />
          </datasources>
          <datasource-dependencies datasource='federated.1ap96g30y2ecut1h0n1md09jv5xb'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;North America&quot;' value='NA' />
                <alias key='&quot;South America&quot;' value='SA' />
              </aliases>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]' field-type='quantitative' major-origin='0' major-spacing='200000' minor-origin='0' minor-show='false' minor-spacing='100000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[none:location:nk]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='8' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:</run>
                <run bold='true'><![CDATA[<[federated.1ap96g30y2ecut1h0n1md09jv5xb].[none:location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Death Count:</run>
                <run bold='true'><![CDATA[<[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1ap96g30y2ecut1h0n1md09jv5xb].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{F9D7FEE1-E4CF-4A93-B2B0-7A04943525EC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid Data 3)' name='federated.0w17mqw1c4xpqk1frsg3m0ngkhof' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w17mqw1c4xpqk1frsg3m0ngkhof'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[Longitude (generated)]' field-type='quantitative' max='23329127.941347159' min='-21386429.562886089' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[Latitude (generated)]' field-type='quantitative' max='15744303.671564221' min='-3816659.1787974024' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[avg:PercentPopulationInfected:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[none:Location:nk]' />
              <color column='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[avg:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Percent Population Infected:</run>
                <run bold='true'><![CDATA[<[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[avg:PercentPopulationInfected:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[Latitude (generated)]</rows>
        <cols>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{61EF9668-3D74-46D0-9505-868D01F67AB5}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid Data 4)' name='federated.19vy04h0kr0p9911m5eub1acknfw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19vy04h0kr0p9911m5eub1acknfw'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]' scope='rows' value='Percent of Population Infected' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]' value='83' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]' value='n#,##0&quot;%&quot;;-#,##0&quot;%&quot;' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' />
              <text column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' />
              <lod column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location:</run>
                <run bold='true'><![CDATA[<[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Month: </run>
                <run bold='true'><![CDATA[<[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Avg. Percent Population Infected:</run>
                <run bold='true'><![CDATA[<[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]>%]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='506' />
                <format attr='maxheight' value='506' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</cols>
        <mark-labels>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2.9359140761350715</value>
                <value>&quot;Canada&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-14' y='6' />
          </mark-label>
          <mark-label id='2'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1.7797613975299662</value>
                <value>&quot;Mexico&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-6' y='19' />
          </mark-label>
          <mark-label id='3'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1.0811525863376117</value>
                <value>&quot;India&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-9' y='9' />
          </mark-label>
          <mark-label id='4'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.007097444080708973</value>
                <value>&quot;China&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-5' y='13' />
          </mark-label>
          <mark-label id='5'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6.4791057176773332</value>
                <value>&quot;United Kingdom&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-9' y='25' />
          </mark-label>
          <mark-label id='6'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
                  <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[tmn:date:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9.5119450107196997</value>
                <value>&quot;United States&quot;</value>
                <value>#2021-04-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
            <label-position x='-1' y='12' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{955B21D6-0481-4989-BAFE-0CA4A3BAB2E0}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Average Percentage of Population Infected by Country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Covid Data 4)' name='federated.19vy04h0kr0p9911m5eub1acknfw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19vy04h0kr0p9911m5eub1acknfw'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='MY' name='[my:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]'>
            <groupfilter function='member' level='[my:date:ok]' member='202103' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            <preset type='last-values' />
          </filter>
          <slices>
            <column>[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[Longitude (generated)]' field-type='quantitative' max='36534989.504281305' min='-33721900.803277925' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[Latitude (generated)]' field-type='quantitative' max='14617420.370630808' min='-6621399.2255325904' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]' value='Month, Year of Date'>
              <formatted-text>
                <run fontalignment='1'>Month, Year of Date</run>
              </formatted-text>
            </format>
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]' value='8' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]' />
              <lod column='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' />
              <geometry column='[federated.19vy04h0kr0p9911m5eub1acknfw].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Location: </run>
                <run bold='true'><![CDATA[<[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Average. Percent of Population Infected: </run>
                <run bold='true'><![CDATA[<[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19vy04h0kr0p9911m5eub1acknfw].[Latitude (generated)]</rows>
        <cols>[federated.19vy04h0kr0p9911m5eub1acknfw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E1E4A708-A89D-4AF6-A5BB-1EBEA0672DBC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Covid Data 4)' name='federated.19vy04h0kr0p9911m5eub1acknfw' />
      </datasources>
      <datasource-dependencies datasource='federated.19vy04h0kr0p9911m5eub1acknfw'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='MY' name='[my:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98666' x='667' y='1000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='750' id='17' type-v2='empty' w='100000' x='0' y='60625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#5ea654' />
          </zone-style>
        </zone>
        <zone fixed-size='47' h='45000' id='12' is-fixed='true' mode='radiolist' name='Sheet 5' param='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]' show-title='false' type-v2='filter' w='15000' x='83333' y='15000' />
        <zone h='15125' id='3' name='Sheet 1' w='100000' x='833' y='0' />
        <zone h='45000' id='11' name='Sheet 5' w='83333' x='0' y='15000' />
        <zone h='37500' id='6' name='Sheet 4' show-title='false' w='54167' x='0' y='62500' />
        <zone h='37500' id='14' name='Sheet 2' show-title='false' w='45833' x='54167' y='62500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='121' h='15125' id='3' is-fixed='true' name='Sheet 1' w='100000' x='833' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='47' h='45000' id='12' mode='dropdown' name='Sheet 5' param='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]' show-title='false' type-v2='filter' w='15000' x='83333' y='15000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45000' id='11' is-fixed='true' name='Sheet 5' w='83333' x='0' y='15000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37500' id='6' is-fixed='true' name='Sheet 4' show-title='false' w='54167' x='0' y='62500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37500' id='14' is-fixed='true' name='Sheet 2' show-title='false' w='45833' x='54167' y='62500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9C8983FD-D6C3-4165-9388-0C686A045135}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1w76oka1y78fp812r968a0m7faul].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9464497E-8FD6-4B4A-A852-13538F435A25}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ap96g30y2ecut1h0n1md09jv5xb].[sum:TotalDeathCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B0D9DBC-4B7E-414D-88CB-C27733D6597A}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[:Measure Names]</field>
            <field>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[avg:PercentPopulationInfected:qk]</field>
            <field>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{209377EA-F2F1-47DB-96B4-31D9D0478D1D}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[none:Location:nk]</field>
            <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D692B5A-99B7-4907-9AA2-DBAE4F5C6AAD}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.19vy04h0kr0p9911m5eub1acknfw].[avg:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w17mqw1c4xpqk1frsg3m0ngkhof].[none:Location:nk]</field>
            <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[my:date:ok]</field>
            <field>[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35A6410D-AC7B-4F47-AC01-2E6EB7DF103B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.19vy04h0kr0p9911m5eub1acknfw].[none:Location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{EA3EA2B3-6FF1-4467-8809-63E595F0EEB6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='58' name='Sheet 1' width='192'>
      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
      cYK8vLxJ1/oPl/jCe5nUyFkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAARYElEQVR4nO3daWwc93nH8e/swV0ud0nucnmfEiWRkijKlHVYsuzYTmQ7RlMlTnoYRVM0
      KAo0L9q8agu0KPqib/qmb4sUblGgQVsEQWAlcYymNuw6iB3HkkiRongf4rXk8tgl9z5m/n3B
      WJZjLyVLy1mK83zecFci5/9wh7+d+c/szKMppRRCWJSt1AUIUUolD4BhGKUuQVhYyQMge2Ci
      lEoeACFKSQIgLE0CICxNAiAsTQIgLE0CICxNAiAszVGsBW0fz9fQtI+P7WuaBiiU+ujxvb0/
      dp3v/OvfF6usHb38xIv81cvfNmUssTc9cABSsQjXb9zk1LmnsOc2GRgaxebycqrnEAP9N8gp
      O32P9zEzMshmMsPBrpOkIys0trcyNTbOwSNdOGyfDkVOz7ERjz7UL3W/EpmUKeOIveuBA2Bg
      p67GR17B0uQkh06eZnO8n5mFOXxNh2lxRRiZmCOv3Jx5/CjXB8fx2DXUzCiOyobP/OMXwmwP
      HIAKXyVO2/YUIqfbKXfZybk1lhJ5go3luNwZ0ltreP1e0BwopZOKbzETyvDsc90opTAMA13X
      P/FxCEM377NByjDI5/OmjSf2ngffBUrE2NzawrYRIVDjZnJyjuRqhqM9rYxOTZHUYrQc7mFu
      bJhldx5XhR+Hw8GXHu/g2vUBzp7tw263A9z5CmCzmzcv12w2HI6iTYPEI+iB134+lyPYdACM
      LMGWIxihBZw9vfiqKjjUopPRGmn0e/EfP8JqNMXxI01kM2mcLjd9J7pge84sREk9cAB81QF8
      1R8/b2huu/M4UNd457HH56fd5wfA7XZvf/VUPOiwQhSVnAcQliYBEJYmARCWJgEQliYBEJYm
      ARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQ
      liYBEJYmARCWJgEQliZ3hbqH7//iJ3z3f75nylh//lvf4vLZ500ZS2yTANzDVjLO3NqSKWPF
      UglTxhEfk10gYWkSAGFpEgBhaRIAYWlFCUAmEaW/v5+BoVEMQ+fWYD/XBoYxUMxNjXL16jVi
      6Tzh0DKGUszNzpI31L0XLMQuK8pRoOXb09QfOMbmxA0WQ7exVbZwpGydkekQqZhO38luBobH
      8NgUmkoSN9zYpUOM2AOKEoDqmiA3hvsx8jqV2TTeqiYq3DqxoTC+QCU2uxvDyJJKxvjlYogX
      n/8SKIX+CHSIMQzdpGrAkI41pitKABYXV+h9/AybE9dI2rwkV8M4bBHq2ltZnZ8jk/Rid3op
      dzh5tqee/sFbnOk7/kh0iLHZ7Dv+fzHZpGON6Yryanf19jIxNoLD18Khtibmp8eIUk1XvZ9q
      LcnIdJjenqMkY1tU+CrpareR1xVOu+wGidIqSgDsDhfdx0/ced7W2X3ncaC+hUD99uPKqioA
      qgI1xRhWiIcmh0GFpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJ
      AISlSQCEpRUMQDKZlIszxL5XMABXrlxhbm7OzFqEMN2Ou0A3b97krbfe+sQli0LsJwUD4PF4
      cDgcZDIZXn31VTNrEsI0Ba8Iu3z5spl1CFESO14SGVpapLahCSOzxUYCGoJVZtUlCvinN/+Z
      t0beNWWsf3z57+hpPmrKWKVSMAAboRle/e6/cazvDNnNJQJdz0gA9oB4JslGMmrKWHlj/x8F
      LBiAcm81fadO0XH4CG73SdrbW82sSwhTFJwEl/v8tAYreOedt3nzZ28wubBuZl1CmGLHOcBi
      OMor3/wW1eUObDY5aSz2nx0D0N5Uyxs/fo0yu8bppy5xsNFvVl1CmGLHABhKEd+MkEkniaey
      ZtUkhGl2DMDxs89w7MwXWJ3uZ3Blg96D9WbVJYQpdgzArQ/f5b0b4xi6ztMvfcOsmoQwzY4B
      OHysl6n5ZTRfA53Ncj9Psf/seGjn9Ss/5MSTL3C0VvG/7w0V/D6lDG5PjjI0OolSBrOTo4yM
      z6BQrIbmuDE0TCZvEN3YwFCK1ZVl6RAj9oQdtwAtjXW8/bPX0RMRTl/6esHv21icIldeR3ed
      j8T6IltGBQ2OCFOL66yHNjjZ3crwyCTlKouNDAvrSYL1cmt0UXoFA7AVWaPn4pfpTsdJJhJ4
      qoMFF7K8GCZeFmdxIkZ7a5BA8CBBt5PpoSV8gWpcnmr07BypTIx3Pgjx0gvSIeazx7p3Pcow
      7/XRdX3fXxRVMABvvv4aT3/9WwSr/KRWx3l7dIPLz/V+5vdW+31UBg/h2ZxgMevEEY3iLYtQ
      3VBHbGMNPZfE7nBT7nRy8VAlN8dmOXn0gHSI+dRY965HM/GEpN1u3/cdawq+mp3tjbz2wyv0
      91/jtZ/+nM7OpoILaezsZmt+jIWEm+OHD2JPLjMb0TjSVk+T38XAzUm6uo9Q21BPdW0r9ZUO
      crrMAUTpFYx378UvUzM7wfhsiK+88ic0BqsLLsRmL+P4yb47z7t6HrvzuLnjMM0d248r6moB
      aGyWD9aJvaFgADTNRnPHERrbDgGgUGjIxFXsLzvu4L39o/9iJBTDadN4+sWX6W4rPBEW4lFU
      IACKVCJBOq/x0uVvUFPhxF1eYW5lQpig4BZgYngAyqsY6f8AgBOnn6S1Tq4IE/tLgaNAGr1n
      L+K2azx76UUu9B1kYmbJ3MqEMEHBLcDSxHV+eOUKHw4O43SU8bVX/sjMuoQwRcEANB0+xd/8
      5Xf4oH8EBWjIcXux/+x4WvGD994nsR4j2FDJYjhiVk1CmGbHAPSdOc8Xv3yRWwPjBAOVZtUk
      hGl2/qBHPsEPfvA6Zy8+QyaTM6kk8ajQDZ1wfMWUscrsZdRUFP881I4BuDYwwqWnTxFKpQkv
      huntbCh6AeLRtZXe5K9f/wtTxjoc7OJvL/1D0Ze74y7Q0xfP8ua71xgcmuLJx7uKPrgQpVZw
      C2DkM9wYHMYXqKft8AmqPC4z6xLCFAW3ANfeeZ2Ur4OvffUy8ZkPGZheNbMuIUxRMAALoWU8
      TpicnMLtcbG0LLdGFPtPwQCcf+YFPFqGTCaDt/4IZ4/JZ/jF/lNwDtDQ2klDa6eZtQhhuoIf
      h373jdcYX/x4t+fiC1+lu1WuBxD7S8EtwIVLX+FcLkNoeQVDQbDGZ2ZdQpiiQAA0HA4H7/z4
      v3m/f5raFj8nLnyVJ3tkHiD2lx1PhOVw8fwzZ6gO1BLZ2DCrJiFMs+NHIc499QW8lVX4Rkeo
      +/XF8ULsJwW3AInoKv/5vf/g+o1hwgtjvH9j2sy6hDBFwQDks2nszjLWwsvoFa186fwxM+sS
      whQFA1BV18ozZ3tYDC0zOTLI/OqWmXUJYYodJ8FDI9P83h98k5efP8utUdkFEvvPjpPgS5ee
      5fv//i/gquJ3f/93zKpJCNMUDMB7b/+UY+df4k//7Ntm1iOEqQrfFmVmhP+7NoHHuf38i7/9
      Cj0H6gouKJuIMjS1zKmew4zcHCRllNH32DHmJ0cJRxN09zxGMrJGbUM9C7dnaWrrwGGTe42K
      0ioYALc3wB9/4w8Jeraf73SffKUMRsdnSGXybK3exlbVwpGyDUamQqTiisdPHqN/eAyPTWFT
      SeKGG7v88Ys9oGAAnn3p67g9Du6nX8XK7XHK/PVoi7MkEym81U1UuHVic2F8gUo0uwvDyJJK
      xvjlYogXn5cOMZ891qPVIUbXzXttlFK70q2mYAAqvPd/GxS7y4szmSISjaC1NbAeDuOwR6hr
      byU8f5tM0ou9zEu5w8lzPQ1cH7zF2b7j0iHmU2M9Wh1i7l5vu03TtF3pVlOUJdY2tlALBAIB
      qquryU2PE8VPV72faluKkekwvT1HScVieHw+ujs08rrCaZfdIFFaRY2U3+8HoLXz4ztIBOqa
      CdQ1A+Cr2t6qVPml57DYG8zbngqxB0kAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISl
      SQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkA
      hKVJAISlSQCEpUkAhKVJAISlSQCEpRUlAEoptqIRNmMJlFIkYptsxhIAZNNJ1jaiKAW5bBYF
      ZDNpjLt6AghRKkUJQGx9heX1KJOD11mLbjB4a4rZW/2Et1Jcv36DzbUFRqeXmBwbJ5dNMjA0
      WoxhhXhoRbk9emWwAXdFjKuhFXKbYZoPHaXZHeXayDQVwXoOHmrn2sAQ9kycn//iV5y78BQa
      2x1GpEPM3WNJh5hCTO8Q83lk4utcHZrh9BNnSKxMEcnm0G1ZnG43ek4HZaBpGi5PJW3VBuuR
      GN6GaukQ86mxpENMIbvVIaYor+ZaaBF7mZOxW8OUBVpZn73J1Vshurs7sGejfHj1Ko1tnXi8
      Xg529xJfnSOryxxAlF5RItV8uJfmu56feeI8sJ3ansdOo5TCZrNBjReA4yd6izGsEA+t+NsU
      tv/w735893Mh9hI5DyAsTQIgLE0CICxNAiAsTQIgLE0CICxNAiAsTQIgLG1XToQJUQp5I09a
      T36un5EAiH0jklnlg/A7n+tnZBdIWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBY
      mgRAWJoEQFiaBEBYmgRAWJoJAVCfuPenEHvJ7gZAGQx8+AFXf/U+8ytbTI2NoyudG/0D5A0J
      hSi9XQ1APrUFFTWcPnOW8NI06WSC0aF+6jqO4LDJ3eJE6e1qAJRS2B0OQEMB+Wya9WgCd5lc
      hyP2hl0NgKPcSzy8wODANSoDjZSV+zh/4QnGBq+Tk7tDiz1gV9+KNZuTcxfOk8nouN0uoA40
      jXNPnNvNYYW4b7u+L2KzOSgv/2iYX+/3axpKKQzDwDCMT9w92lNWTlfTwd0uC4D6qiDGPTqu
      +CsqTaun2uO7Zz113ho6gx2m1OOyu3asR8NGS2WbKbXUVtTf87WxYcdrr/xcy9VUiY5RKqXu
      hMBmYteTe9lL9Xy0auT28p+tGOuqZAH4iFJqT63gvVSPBGBnxVhXJX+ru99fQM/nSCQSpDPZ
      PVHPb1JKkc1u1/ZR87h0KvVQ7WAftrmIns8SiydQAIZOMpV54GU9DD2fJZPN/8a/5R+6Ve7n
      fW3yuQzZ3Pa6iW9F2EqkSh+A+zUzeouF5WXWI1vb+4J3zSGyuRyGnieWSIJS5HNZkuntlZ1O
      Jsjlzems+OYbPyKe1RkbGwdlcOOX77KwkTBl7E/LMThwk43VFbaSGdbmp/jVzbGSVHJ7eoKb
      oxMAZNJJsnmdeGyTvPHR+jGn2+TsxC2Gx2dRRp7x8SnsNu3RuTGWns8RTyQoK/MwPTXJoQMt
      DI+H2AhNUN9xlMzmGoFAJcu6jcXFNRr9duwVNcRTWbKpBGdOn2K3dySaWpqZnZpF6Trp2Dr+
      A8eILs3TVnN0l0f+LHbcZbCVzNHocjIfy9DhsxFN61S7zevuiNJJZsFFjlx6k6sD47S3t5OP
      LWNzeVi4Pcd6JM6FC2d29d1YGTnSqhy7niCXTbIZS5AMTz86WwDN7qant5cDrY3ohoGhDHRD
      4a9rpruzGbuznMbGRrKZBDXBOuoCVWxGN1HYCNYEMWOi43B58drTRJM5lhYW2YpGWF1boySn
      PJTiQNcJOuormJ6eZn0tQjSeYHFx2dQy0lvrrEc2SccjLEShs7WB0PJ2DYn1FbI2NzbUrq+f
      RCTMRiRKMrLKetZJbbCWKp+n9JPg+xVdXeJ2aI2KyhoC5bC6maDKX4fTblATCLARXiQcSdDW
      2sD7712n9cABOjuamJ2eAqePzo7mew/yEJRSRCIbVFdWMDO/hr+qHH+ghtTmOlpFgHKHyRNZ
      pTMzOUEiBx0tjSiHG1+5k43IJoGA37QykrEomsuHy66IRKJEIxvYyyup8Tpxut3Mzs7j8lTS
      3ta0q+/G8egGTp+fMrJEtrKg8lR5HPw/3E+o8NqmAiMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      9fL80UP8f1Ljnu68ze28AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
